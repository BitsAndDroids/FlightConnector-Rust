import { WASMEvent } from "@/model/WASMEvent";

export const MockWASMEventArray: WASMEvent[] = [
  {
    id: 1000,
    action: "(L:Generic_Master_Caution_Active)",
    action_text: "Master caution on",
    action_type: "output",
    output_format: "time",
    update_every: 0.0,
    min: 0.0,
    max: 100.0,
    plane_or_category: ["generic"],
    value: 0,
    offset: 0,
    made_by: "BitsAndDroids",
  },
  {
    id: 1001,
    action: "(L:Generic_Master_Warning_Active)",
    action_text: "Master warning on",
    action_type: "output",
    output_format: "time",
    update_every: 0.0,
    min: 0.0,
    max: 100.0,
    value: 0,
    offset: 0,
    plane_or_category: ["generic"],
    made_by: "BitsAndDroids",
  },
  {
    id: 1002,
    action: "0 (>A:TRANSPONDER STATE:1, enum)",
    action_text: "Tranpsponder state off",
    action_type: "input",
    output_format: "",
    update_every: 0.0,
    min: 0.0,
    max: 100.0,
    value: 0,
    offset: 0,
    plane_or_category: ["generic"],
    made_by: "BitsAndDroids",
  },
  {
    id: 1003,
    action: "1 (>A:TRANSPONDER STATE:1, enum)",
    action_text: "Tranpsponder state standby",
    action_type: "input",
    output_format: "",
    update_every: 0.0,
    min: 0.0,
    max: 100.0,
    value: 0,
    offset: 0,
    plane_or_category: ["generic"],
    made_by: "BitsAndDroids",
  },

  {
    id: 1004,
    action: "2 (>A:TRANSPONDER STATE:1, enum)",
    action_text: "Tranpsponder state test",
    action_type: "input",
    output_format: "",
    update_every: 0.0,
    min: 0.0,
    max: 100.0,
    value: 0,
    offset: 0,
    plane_or_category: ["generic"],
    made_by: "BitsAndDroids",
  },
  {
    id: 1005,
    action: "3 (>A:TRANSPONDER STATE:1, enum)",
    action_text: "Tranpsponder state on",
    action_type: "input",
    output_format: "",
    value: 0,
    offset: 0,
    update_every: 0.0,
    min: 0.0,
    max: 100.0,
    plane_or_category: ["generic"],
    made_by: "BitsAndDroids",
  },
  {
    id: 1006,
    action: "4 (>A:TRANSPONDER STATE:1, enum)",
    action_text: "Tranpsponder state alt",
    action_type: "input",
    output_format: "",
    update_every: 0.0,
    min: 0.0,
    max: 100.0,
    value: 0,
    offset: 0,
    plane_or_category: ["generic"],
    made_by: "BitsAndDroids",
  },
  {
    id: 1007,
    action: "5 (>A:TRANSPONDER STATE:1, enum)",
    action_text: "Tranpsponder state ground",
    action_type: "input",
    value: 0,
    offset: 0,
    output_format: "",
    update_every: 0.0,
    min: 0.0,
    max: 100.0,
    plane_or_category: ["generic"],
    made_by: "BitsAndDroids",
  },
  {
    id: 1008,
    action:
      "0 1 3 4 4 (A:TRANSPONDER STATE:1, Number) case (>A:TRANSPONDER STATE:1, Number)",
    action_text: "Tranpsponder state up",
    action_type: "input",
    output_format: "",
    update_every: 0.0,
    min: 0.0,
    max: 100.0,
    value: 0,
    offset: 0,
    plane_or_category: ["generic"],
    made_by: "BitsAndDroids",
  },
  {
    id: 1009,
    action:
      "4 3 1 0 4 (A:TRANSPONDER STATE:1, Number) case (>A:TRANSPONDER STATE:1, Number)",
    action_text: "Tranpsponder state down",
    action_type: "input",
    output_format: "",
    update_every: 0.0,
    min: 0.0,
    max: 100.0,
    value: 0,
    offset: 0,
    plane_or_category: ["generic"],
    made_by: "BitsAndDroids",
  },
  {
    id: 753,
    action: "(>H:AS1000_PFD_FPL_Push)",
    action_text: "test",
    action_type: "input",
    output_format: "",
    update_every: 0.0,
    min: 0.0,
    max: 100.0,
    value: 0,
    offset: 0,
    plane_or_category: ["generic"],
    made_by: "BitsAndDroids",
  },
  {
    id: 754,
    action: "(>H:AS1000_PFD_PROC_Push)",
    action_text: "PFD PROC button push",
    action_type: "input",
    output_format: "",
    update_every: 0.0,
    min: 0.0,
    max: 100.0,
    value: 0,
    offset: 0,
    plane_or_category: ["generic"],
    made_by: "BitsAndDroids",
  },
  {
    id: 755,
    action: "(>H:AS1000_PFD_RANGE_INC)",
    action_text: "PFD range increment",
    action_type: "input",
    output_format: "",
    update_every: 0.0,
    min: 0.0,
    max: 100.0,
    value: 0,
    offset: 0,
    plane_or_category: ["generic"],
    made_by: "BitsAndDroids",
  },
  {
    id: 756,
    action: "(>H:AS1000_PFD_RANGE_DEC)",
    action_text: "PFD Range Decrease",
    action_type: "input",
    output_format: "",
    update_every: 10.0,
    min: 0.0,
    max: 100.0,
    value: 0,
    offset: 0,
    plane_or_category: ["generic"],
    made_by: "BitsAndDroids",
  },
  {
    id: 3000,
    action: "(>H:AS1000_PFD_DIRECTTO)",
    action_text: "PFD direction AS1000",
    action_type: "input",
    output_format: "",
    update_every: 0.0,
    min: 0.0,
    max: 100.0,
    value: 0,
    offset: 0,
    plane_or_category: ["generic"],
    made_by: "User",
  },
  {
    id: 3001,
    action: "(>H:AS1000_PFD_MENU_Push)",
    action_text: "PFD menu push",
    action_type: "input",
    output_format: "",
    update_every: 0.0,
    min: 0.0,
    max: 100.0,
    value: 0,
    offset: 0,
    plane_or_category: ["generic"],
    made_by: "User",
  },
];
